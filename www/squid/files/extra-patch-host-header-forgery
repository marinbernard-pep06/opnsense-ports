--- src/client_side_request.cc.orig	2022-09-05 06:06:48.000000000 +0200
+++ src/client_side_request.cc
@@ -524,17 +524,22 @@
 ClientRequestContext::hostHeaderIpVerify(const ipcache_addrs* ia, const Dns::LookupDetails &dns)
 {
     Comm::ConnectionPointer clientConn = http->getConn()->clientConnection;
 
     // note the DNS details for the transaction stats.
     http->request->recordLookup(dns);
 
-    // Is the NAT destination IP in DNS?
-    if (ia && ia->have(clientConn->local)) {
-        debugs(85, 3, "validate IP " << clientConn->local << " possible from Host:");
+    if (ia) {
+        // Is the NAT destination IP in DNS?
+        // Do not enforce IP validation on disabled host-header forgery check
+        if (ia->have(clientConn->local)) {
+            debugs(85, 3, "validate IP " << clientConn->local << " possible from Host:");
+        } else {
+            debugs(85, 3, "validate IP " << clientConn->local << " skipped from Host:");
+        }
         http->request->flags.hostVerified = true;
         http->doCallouts();
         return;
     }
     debugs(85, 3, HERE << "FAIL: validate IP " << clientConn->local << " possible from Host:");
     hostHeaderVerifyFailed("local IP", "any domain IP");
 }
